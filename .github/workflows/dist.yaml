name: Build Packages

on: [push]

jobs:
  wheels-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python:
          - download_url: 'https://www.python.org/ftp/python/3.8.5/python-3.8.5-macosx10.9.pkg'
            python: '/Library/Frameworks/Python.framework/Versions/3.8/bin/python3'
          - download_url: 'https://www.python.org/ftp/python/2.7.18/python-2.7.18-macosx10.9.pkg'
            python: '/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7'

    steps:
    - uses: actions/checkout@master
    - run: |
        curl "${{ matrix.python.download_url }}" -o python.pkg
        sudo installer -pkg python.pkg -target /
    - name: Install dependencies
      run: |
        ${{ matrix.python.python }} -m pip install --user -U pip wheel
        ${{ matrix.python.python }} -m pip install --user .
    - name: Build abi3 wheel (64-bit)
      run: |
        ${{ matrix.python.python }} setup.py bdist_wheel --py-limited-api cp35
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        path: dist/*

  wheels-windows:
    runs-on: windows-2019

    strategy:
      matrix:
        python-version: [pypy3, 3.6]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} (64-bit)
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install dependencies (x64)
        run: |
          python -m pip install --upgrade pip wheel
          pip install .
      - name: Build abi3 wheel (64-bit)
        run: |
          python setup.py bdist_wheel --py-limited-api cp35
      - name: Set up Python ${{ matrix.python-version }} (32-bit)
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x86'
      - name: Install dependencies (x86)
        run: |
          python -m pip install --upgrade pip wheel
          pip install .
      - name: Build abi3 wheel (32-bit)
        run: |
          python setup.py bdist_wheel --py-limited-api cp35
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: dist/*

  sdist:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install .
      - name: sdist
        run: python setup.py sdist --formats zip,gztar
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: dist/*

  wheels-for-manylinux:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        image:
          - manylinux1_i686
          - manylinux1_x86_64
          - manylinux2014_s390x
          - manylinux2014_ppc64le
          - manylinux2014_aarch64
        py:
          - cp27-cp27m
          - cp27-cp27mu
          - cp36-cp36m

    steps:
    - uses: actions/checkout@v2
    - name: Setup qemu-user-static for docker
      run: |
        docker pull multiarch/qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - name: Build abi3 wheel
      run: |
        P=${{ matrix.image }}
        if [ "${P: -4}" = i686 ]; then
          PRE="linux32"
        else
          PRE=""
        fi
        docker pull quay.io/pypa/$P
        docker run --rm -e PLAT=$P -v $(pwd):/io quay.io/pypa/$P $PRE bash -c '
          set -xe
          cd /io
          /opt/python/${{ $matrix.py }}/bin/pip install . wheel
          /opt/python/${{ $matrix.py }}/bin/python setup.py bdist_wheel --py-limited-api cp35

          auditwheel repair dist/*.whl
          rm dist/*.whl
        '
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl